Knockout + SignalR
==================

Snabb genomgång av appen.

	- ASP.NET MVC 4
	- Web API
	- RavenDB
	- StructureMap

	- Twitter Bootstrap
	- Jasmine
	- Knockout

Bundles

MVVM

	- Vad är MVC?
	- Skillnad med MVVM
	- 

Skapa enkel vymodell för Answer
	- Question-sidan
	- Skapa AnswerViewModel
	- Sätt upp data bindings
	- ko.applyBindings()


Refactoring av vymodell - ta emot model


Lägg till vymodell för Question
	- questionText
	- Lista med answers
	- Lägg till data bindings för questionText och answers (foreach)


Refactoring av vymodeller - ta emot model


Click-hantering
	- Ny funktion i AnswerViewModel. 
	- alert('Voted')
	- Lägg till data binding för click på Vote-knappen
	- self.votes = self.votes + 1


Introducera Observables
	- ko.observable(votes)
	- ta bort alert


Ruta för att lägga till nytt svar
	- Form med text-fält och submit-knapp
	- newAnswerText
	- addAnswer funktion


Gör om till observableArray
	- Nu kan man lägga till ett nytt svar!


Visa vilket svar som leder
	- Introducera ko.computed
	- Börja visa värdet överst

API
===

Visa Api:et

WebApi

Fiddler

Lägg till fråga via Fiddler 
	- Skicka in exempelmodellen
 	- Notera id:t
 	- Sätt start action till Home/Question/{id}



Introducera PageViewModel 
	- Håller ihop flödet på en sida
	- Laddar in question från API:et


Spara nya svar
	- Lägg till id på QuestionViewModel
	- Bryt ut answerAdded till egen metod som tar emot ett Answer
	- Anropa API:et för att spara nytt svar 


Spara röstningar
	- Lägg till questionId och answerId till AnswerViewModel
	- Skicka in questionId till AnswerViewModel
	- Bryt ut votesUpdated till egen metod
	- Spara röstning 


SignalR
=======

Lägg till QuestionHub
	